package main

/*
Things you might not like about Golang.
1. It is not object oriented. These is not concepts of class and object.
  - provition of interfaces
  - structural functions.
  - struct composition.

2. Stubborn Language.
  - Creaators know that the language is not perfect. and they tell people
    that there are other better choices
  - Doesn't let you leave unused variables, or methods.
  - Very few keywords, which restrict freedom of doing same thing in different ways.
  - Does not have while loop. It only supports

3. No Standard Package managements.
4. Does not support default arguments.
5. No generics (But they do exist now.)
6. No Exceptions handling at error.
  - Exceptions are handled just like other types.

7. No overloading for both operators and function.

Compared with Python:
  - No semicolon
  - A function can return multiple arguments.
  - You don't have to explicitly declare the type of the variable. However,
    function parameteric variable should always have type specified.
  - Has automatic garbage collection.

8 Things you might like about Go
 1. Light parallel threads (goroutines)
 2. Fast compiled language.
 3. Productive. Everything is simple and clear.
 4. Multiple platform par exellence
 5. Rich Standard Libraries
 6. Unicode Everything by default.
 7. Good bult-int tools
    a. gofmt
    b. godoc
    c. go test
 8. Easy language in terms of writing and formatting (Syntax)
 9. Tiny images. Which makes it cloud native.
*/

/*
Types of Go compilers:
 1. gc (standard compile)
 2. gccgo (supports more architectures.): This is usually late in supporting new versions.
*/

/*
  Work Environment
	1. Folder created on your computer, created anywehre you want, will be a place for all your Go projects.
	 - An environment variable GOPATH refers to this folder.

	 - Support you name your work folders as work, which should contain three other subfolders.
	 	work
			- scr : Here you place all your code for all your projects.
			- bin : gc aggregator transfer executables generated by your code directly to that folder.
			- pkg : such as bin but not executables. If you write a program that is a library but not excutable
				program itself, or ftech external library via go get command, it will compiled as a library that is
				placed in that folder so that it can be easily fetched in other programs without reuse.

	 work folder
	 	--- bin
		--- src
		--- pkg

	2. Go prompts you to place your code in a path similar to your github account.
		Example: github account: mjthecoder65, and your account linke is.
		https://github.com/mjthecoder65

		Project Name: demo-app
		https://github.com/mjthecoder65/demo-app

		work/src/github.com/mjthecoder65/demo-app

		# understanding GOPATH
		go env GOPATH

	3. Creating A go work folders.
		mkdir $HOME/work
		export GOPATH = $HOME/work
		export PATH = $PATH:$GOPATH/bin
		NOTE: add this to zshrc or bashrc to make this variable permanent.
*/
